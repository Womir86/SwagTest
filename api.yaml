swagger: "2.0"
info:
  title: MyWeb Api
  description: TO jest Api testowe
  version: 1.0
  contact:
    email: slawek.zahun@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

schemes: [http, https]

paths:
#Returnuje mi tu stringa cyk cyk
  /string:
    get:
      summary: Zwraca stringa
      description: Powinno zwrócić stringa
      responses:
        200:
          description: Success
          schema:
            type: string
            example: Przykład stringa
        400:
          description: User Error
          schema:
            type: string
            example: awaria interfejsu między klawiaturą a monitorem ^^
        500:
          description: Internal Server Error

#Returnuje mi tu object cyk cyk 
  /user:
    get:
      summary: Zwraca obiekt
      description: Powinno zwrócić obiekt
      responses:
        200:
          description: Success
          schema:
            type: object
            properties: 
              id:
                type: integer
              name:
                type: string
              age:
                type: integer
              
        400:
          description: User Error                   
             awaria interfejsu między klawiaturą a monitorem ^^
        500:
          description: Internal Server Error


#Returnuje wiele juserów :)
  /users:
    get:
      summary: Zwraca wszystkich usersów
      description: Powinno zwrócić wszystkich userów
      responses:
        200:
          description: Success
          schema:
            type: array
            items: 
              type: object
              properties: 
                id:
                  type: integer
                name:
                  type: string
                age:
                  type: integer


#Returnuje usera po ID
  /users/{id}:
    get:
      summary: Zwraca usersa z ID
      description: Powinno zwrócić usera z ID
      parameters:
        - name: id   
          in: path
          require: true
          schema:
            type: integer
      responses:
        200:
          description: Success

# #Post json/body ver 1
#   /create:
#     post:
#       summary: Post Dejta
#       produces:
#         - application/json
#       consumes:
#         - application/json
#       parameters:
#       - in: body
#         name: user
#         schema:
#           type: object
#           properties:
#             id:
#               type: integer
#             name: 
#               type: string
#             age:
#               type: integer
#       responses:
#         200:
#           description: Succes
  

  
#Post json/body ver 2
  /create:
    post:
      summary: Post Dejta
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
      - in: body
        name: user
        schema:
          $ref: "#components/schemes/user"
      responses:
        200:
          description: Succes

#Query
  /userQuery:
    get:
      parameters:
        - in: query
          name: id
          type: integer
        - in: query
          name: age
          type: integer
      responses:
        200:
          description: Success  

#File upload
  /upload:
    post:
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: file
          type: file
          required: true
          description: File Uploud
      responses:
        200:
          description: Success   


  /deleteQuery:
    delete:
      parameters:
        - in: query
          name: id
          type: integer
        
      responses:
        200:
          description: Success     

  /booksHANA:
    get:
      summary: Zwraca wszystkich usersów z bazy HANA
      description: Powinno zwrócić wszystkich userów
      responses:
        200:
          description: Success
          schema:
            type: array
            items: 
              type: object
              properties: 
                ID:
                  type: integer
                NAME:
                  type: string
                AUTHOR:
                  type: string

#Schemes do $ref definition
components:
  schemes:  
    user:
      type: object
      properties:
        id:
          type: integer
          required: true
        name: 
          type: string
        age:
          type: integer